---
name: libcryptsetup CI

# yamllint disable-line rule:truthy
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # MANDATORY CHECKS USING CURRENT DEVELOPMENT TOOLCHAIN:
  format:
    env:
      TASK: fmt-travis
      TOOLCHAIN: 1.52.1
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: rustfmt
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
      - name: Test format on ${{ env.TOOLCHAIN }} toolchain
        run: make -f Makefile $TASK
  lint:
    env:
      TASK: clippy
      TOOLCHAIN: 1.52.1
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
      - name: Install dependencies
        run: >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ focal main"
      - name: Install dependencies
        run: >
          sudo apt-get install libcryptsetup-dev
      - name: Test linting on ${{ env.TOOLCHAIN }} toolchain
        run: make -f Makefile $TASK

  # MANDATORY TESTING ON STABLE
  stable:
    env:
      TOOLCHAIN: stable
    strategy:
      matrix:
        include:
          - task: make -f Makefile build
            dependencies: libcryptsetup-dev
          - task: make -f Makefile docs-travis
            dependencies: libcryptsetup-dev
          - task: make -f Makefile test
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: make -f Makefile test-mutex
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: >
              sudo
              TEST_DIR=$GITHUB_WORKSPACE
              PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile test-loopback
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: >
              sudo
              TEST_DIR=$GITHUB_WORKSPACE
              PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile test-loopback-mutex
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: make -f Makefile release
            dependencies: libcryptsetup-dev
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
      - name: Install dependencies
        run: >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ focal main"
      - name: Install dependencies
        run: >
          sudo apt-get install ${{ matrix.dependencies }}
      - name: Test build on ${{ env.TOOLCHAIN }} toolchain
        run: ${{ matrix.task }}

  # MANDATORY TESTING USING LOWEST SUPPORTED TOOLCHAIN
  lowest_supported:
    env:
      TOOLCHAIN: 1.49.0
    strategy:
      matrix:
        include:
          - task: make -f Makefile test
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: make -f Makefile test-mutex
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: >
              sudo
              TEST_DIR=$GITHUB_WORKSPACE
              PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile test-loopback
            dependencies: libcryptsetup-dev libkeyutils-dev
          - task: >
              sudo
              TEST_DIR=$GITHUB_WORKSPACE
              PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile test-loopback-mutex
            dependencies: libcryptsetup-dev libkeyutils-dev
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
      - name: Install dependencies
        run: >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ focal main"
      - name: Install dependencies
        run: >
          sudo apt-get install ${{ matrix.dependencies }}
      - name: Test build on ${{ env.TOOLCHAIN }} toolchain
        run: ${{ matrix.task }}

  checks-with-ci-repo:
    strategy:
      matrix:
        include:
          - task: >
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions
              MANIFEST_PATH=../../Cargo.toml
              make -f ../../Makefile check-fedora-versions
          - task: >
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions
              MANIFEST_PATH=../../libcryptsetup-rs-sys/Cargo.toml
              make -f ../../Makefile check-fedora-versions-sys
    runs-on: ubuntu-18.04
    container:
      image: fedora:33  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          git
          jq
          make
          openssl-devel
          python-requests
          python-semantic_version
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.52.1  # CURRENT DEVELOPMENT TOOLCHAIN
          override: true
      - name: Check out ci repo
        run: git clone https://github.com/stratis-storage/ci.git
      - name: Run ${{ matrix.task }}
        run: ${{ matrix.task }}
        working-directory: ./ci/dependency_management

  # VERIFICATION OF TEST INFRASTRUCTURE
  yamllint:
    env:
      TASK: yamllint
      PYTHON: 3.8.6
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON }}
      - name: Install dependencies
        run: pip3 install yamllint==1.26.0
      - name: Run yamllint
        run: make -f Makefile $TASK
